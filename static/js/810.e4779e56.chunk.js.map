{"version":3,"file":"static/js/810.e4779e56.chunk.js","mappings":"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","sources":["components/MovieItem/MovieItem.styled.js","components/MovieItem/MovieItem.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/MoviesFetch.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import styled from 'styled-components';\n\n\nexport const Conteiner =styled.div`\ndisplay: flex;\ngap:15px;\n`\nexport const SubTitle= styled.p`\nfont-weight:700;\n`\n\nexport const BoxInfo=styled.div`\nwidth:600px;\n`","\nimport posterPlug from '../../utility/posterPlug.png';\nimport {Conteiner, SubTitle,BoxInfo} from './MovieItem.styled'\n\nconst MovieItem = ({ movieInfo }) => {\n\n   const {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = movieInfo;\n  // ссылка на imgPoster\n  const imgPoster = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n\n  //  Преобразование рейтинга в %\n  const vote =Math.round(vote_average * 10);\n\n  // извлечение года выпуска фильма\n  const releaseYear = release_date.slice(0, 4);\n\n  // запись массива жанров в переменную, жанры разделить пробелом\n  let genresArr = [];\n  genres.map(genre => genresArr.push(genre.name)).join(' ');\n\n  return (\n    <Conteiner>\n\n    <img\n        src={!poster_path ?posterPlug:imgPoster}\n        alt={original_title}\n        width=\"250\"\n      />\n   <BoxInfo>\n      <h2>\n        {original_title} ({releaseYear})\n      </h2>\n      <p>Use Score {vote}%</p>\n      <SubTitle>Overview</SubTitle>\n      <p>{overview}</p>\n      <SubTitle>Genres</SubTitle>\n      <p>{genresArr.join(' ')}</p>\n      </BoxInfo>\n    </Conteiner>\n  );\n};\n\nexport default MovieItem;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Conteiner=styled.div`\npadding:20px;\n`\n\n\n\nexport const Link = styled(NavLink)`\n  padding: 2px 10px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  border: 2px black solid;\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n`\nexport const Div=styled.div`\nmargin:10px 0;\n`\n\nexport const List= styled.ul`\ndisplay:flex;\ngap:10px;\npadding: 0;\n  list-style: none;\n`","import PropTypes from 'prop-types';\nimport { Suspense } from 'react';\nimport MovieItem from 'components/MovieItem/MovieItem';\nimport { useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport { getMovieDeteilFetch } from '../../services/MoviesFetch';\n// Стили\nimport { Conteiner, Link, List, Div } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState(null);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  // добавить проверку возврата на '/' т.к при перезагрузке location.state  будет null\n  const backLocationLink = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    async function getMoveInfo() {\n      try {\n        const movieDeteil = await getMovieDeteilFetch(movieId);\n        setMovieInfo(movieDeteil);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getMoveInfo();\n  }, [movieId]);\n\n  // первый рендер если false то return\n  if (!movieInfo) {\n    return;\n  }\n  return (\n\n    <Conteiner>\n      <Link to={backLocationLink.current}>Go back</Link>\n \n      <Div>\n                   <MovieItem movieInfo={movieInfo} />    \n      </Div>\n   \n      <h1>Additional information </h1>\n      <List>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </List>\n      <Suspense fallback={<div>Loding...</div>}>\n          <Outlet />\n      </Suspense>\n    </Conteiner>\n   \n  );\n};\nMovieItem.propType={\n  movieInfo:PropTypes.objectOf(Array)\n}\n\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '992e567e43c913ea6cedbae9c8870c1e';\nconst TREND_URL = `${BASE_URL}/trending/movie/week`;\nconst SEARCH_URL = `${BASE_URL}/search/movie`;\nconst MOVIE_DETAILS_URL = `${BASE_URL}/movie/`;\n\nasync function getTrendFetch() {\n  const params = {\n    api_key: API_KEY,\n  };\n  const response = await axios.get(`${TREND_URL}`, { params });\n  return response.data;\n}\n\nasync function getMovieDeteilFetch(movieId) {\n  const params = {\n    api_key: API_KEY,\n  };\n  const response = await axios.get(`${MOVIE_DETAILS_URL}${movieId}`, {\n    params,\n  });\n\n  return response.data;\n}\n\nasync function getMovieCast(movieId) {\n  const params = {\n    api_key: API_KEY,\n  };\n  const response = await axios.get(`${MOVIE_DETAILS_URL}${movieId}/credits`, {\n    params,\n  });\n\n  return response.data;\n}\n\nasync function getMoviesReviews(movieId) {\n  const params = {\n    api_key: API_KEY,\n  };\n  const response = await axios.get(`${MOVIE_DETAILS_URL}${movieId}/reviews`, {\n    params,\n  });\n  return response.data;\n}\n\nasync function getSearchFetch(moviesName) {\n  const params = {\n    api_key: API_KEY,\n    query: moviesName,\n  };\n\n  const response = await axios.get(`${SEARCH_URL}`, { params });\n  return response.data;\n}\n\nexport {\n  getTrendFetch,\n  getMovieDeteilFetch,\n  getMovieCast,\n  getMoviesReviews,\n  getSearchFetch,\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["Conteiner","styled","SubTitle","BoxInfo","movieInfo","poster_path","original_title","release_date","vote_average","overview","genres","imgPoster","vote","Math","round","releaseYear","slice","genresArr","map","genre","push","name","join","src","posterPlug","alt","width","Link","NavLink","Div","List","MovieItem","PropTypes","Array","useState","setMovieInfo","movieId","useParams","location","useLocation","backLocationLink","useRef","state","from","useEffect","getMovieDeteilFetch","movieDeteil","console","log","getMoveInfo","to","current","Suspense","fallback","BASE_URL","API_KEY","TREND_URL","SEARCH_URL","MOVIE_DETAILS_URL","getTrendFetch","params","api_key","axios","response","data","getMovieCast","getMoviesReviews","getSearchFetch","moviesName","query","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}